name: Build OpenWrt x86

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 检出当前仓库（带 config）
      - name: Checkout self repository
        uses: actions/checkout@v4

      # 拉取 OpenWrt 源码
      - name: Clone OpenWrt source (v24.10.4)
        run: |
          git clone https://github.com/openwrt/openwrt.git
          cd openwrt
          git checkout v24.10.4

      # 安装依赖
      - name: Install build dependencies
        run: |
            sudo apt-get update
            sudo apt-get install -y \
            ack antlr3 asciidoc bash bc binutils bzip2 cmake coreutils diffstat \
            file findutils flex gawk gcc-multilib g++-multilib gettext git \
            libncurses5-dev libssl-dev make patch perl-modules python3 python3-setuptools \
            rsync unzip wget zlib1g-dev swig

        # 清理磁盘
      - name: Free up disk space
        run: |
            sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc
            sudo apt-get clean

      - name: Apply patch
        working-directory: ./openwrt
        run: |
            bash ../patch_openwrt.sh "COpenWrt"

      # 更新 feed（进入 openwrt 目录）
      - name: Update feeds & install
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Install themes & tools
        working-directory: ./openwrt
        run: |
            set -euo pipefail
            git clone --depth 1 https://github.com/jerrykuku/luci-theme-argon.git
            rm -rf package/feeds/luci/luci-theme-argon
            mv luci-theme-argon package/feeds/luci/luci-theme-argon

      - name: Install luci-app-openclash (Bypass only)
        working-directory: ./openwrt
        run: bash ../openclash.sh

      # 复制 config
      - name: Copy custom .config
        working-directory: ./openwrt
        run: |
          cp ../default.config .config

      # 编译（同样要进入 openwrt 目录）
      - name: Compile
        run: |
          cd openwrt
          make defconfig
          make download -j"$(nproc)" || make download -j1 V=s
          make -j"$(nproc)" || make -j1 V=s

      # 上传产物（要包含 openwrt 路径）
      - name: Archive output
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-x86-build
          path: openwrt/bin/targets/x86/64/*.img.gz